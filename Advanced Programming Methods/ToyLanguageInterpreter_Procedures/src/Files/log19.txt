-------------------------
Program ID: 19
Execution Stack:
Ref(int) v1
(Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:

Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
(Ref(int) v2; int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
v1 --> (0, int)
Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
Ref(int) v2
(int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
v1 --> (0, int)
Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
(int x; int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
v1 --> (0, int)
v2 --> (0, int)
Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
int x
(int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
v1 --> (0, int)
v2 --> (0, int)
Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
(int q; new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
x --> 0
v1 --> (0, int)
v2 --> (0, int)
Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
int q
(new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
x --> 0
v1 --> (0, int)
v2 --> (0, int)
Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
(new(v1, 20); new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
q --> 0
x --> 0
v1 --> (0, int)
v2 --> (0, int)
Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
new(v1, 20)
(new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
q --> 0
x --> 0
v1 --> (0, int)
v2 --> (0, int)
Out List:

File Table:

Heap Table:

-------------------------
-------------------------
Program ID: 19
Execution Stack:
(new(v2, 30); newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
q --> 0
x --> 0
v1 --> (1, int)
v2 --> (0, int)
Out List:

File Table:

Heap Table:
1 --> 20
-------------------------
-------------------------
Program ID: 19
Execution Stack:
new(v2, 30)
(newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
q --> 0
x --> 0
v1 --> (1, int)
v2 --> (0, int)
Out List:

File Table:

Heap Table:
1 --> 20
-------------------------
-------------------------
Program ID: 19
Execution Stack:
(newLock(x); fork(fork(lock(x); heapWrite(v1, readHeap(v1) - 1); unlock(x)); lock(x); heapWrite(v1, readHeap(v1) * 10); unlock(x)); newLock(q); fork(fork(lock(q); heapWrite(v2, readHeap(v2) + 5); unlock(q)); lock(q); heapWrite(v2, readHeap(v2) * 10); unlock(q)); no operation; no operation; no operation; no operation; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q))
Symbols Table:
q --> 0
x --> 0
v1 --> (1, int)
v2 --> (2, int)
Out List:

File Table:

Heap Table:
1 --> 20
2 --> 30
-------------------------
