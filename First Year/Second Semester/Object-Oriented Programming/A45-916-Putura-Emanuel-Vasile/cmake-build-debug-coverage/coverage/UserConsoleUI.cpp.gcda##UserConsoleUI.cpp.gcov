        -:    0:Source:D:/Informatica/UBB Sem. 2/OOP/a45-916-Putura-Emanuel-Vasile/presentation/UserConsoleUI/UserConsoleUI.cpp
        -:    0:Graph:D:\Informatica\UBB Sem. 2\OOP\a45-916-Putura-Emanuel-Vasile\cmake-build-debug-coverage\CMakeFiles\a45_916_Putura_Emanuel_Vasile.dir\presentation\UserConsoleUI\UserConsoleUI.cpp.gcno
        -:    0:Data:D:\Informatica\UBB Sem. 2\OOP\a45-916-Putura-Emanuel-Vasile\cmake-build-debug-coverage\CMakeFiles\a45_916_Putura_Emanuel_Vasile.dir\presentation\UserConsoleUI\UserConsoleUI.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by Emanuel on 23.03.2021.
        -:    3://
        -:    4:
        -:    5:#include "UserConsoleUI.h"
        -:    6:
        -:    7:#include <iostream>
        -:    8:
    #####:    9:void UserConsoleUI::menu() const {
    #####:   10:    TextTable table {2};
    %%%%%:   10-block  0
    %%%%%:   10-block  1
    $$$$$:   10-block  2
    #####:   11:    table.addHeader(2, "COMMAND", "COMMAND DESCRIPTION");
    #####:   12:    table.addRow(2, "display", "display the trench coats in the database, having a given size, one by one");
    %%%%%:   12-block  0
    #####:   13:    table.addRow(2, "shopping basket", "see the shopping basket and the total price of the items");
    %%%%%:   13-block  0
    #####:   14:    table.addRow(2, "switch", "switch to user mode");
    %%%%%:   14-block  0
    #####:   15:    table.addRow(2, "exit", "exit the application");
    %%%%%:   15-block  0
    #####:   16:    std::cout << "User Mode On\nApplication menu:\n" << table;
    %%%%%:   16-block  0
    %%%%%:   16-block  1
    #####:   17:}
        -:   18:
    #####:   19:int UserConsoleUI::run() {
    #####:   20:    bool running = true;
    %%%%%:   20-block  0
    #####:   21:    while (running) {
    %%%%%:   21-block  0
    %%%%%:   21-block  1
    #####:   22:        menu();
    %%%%%:   22-block  0
        -:   23:
    #####:   24:        int command = mapCommand(getCommand());
    %%%%%:   24-block  0
    $$$$$:   24-block  1
    #####:   25:        switch (command) {
    #####:   26:            case 0:
        -:   27:                // display case
    #####:   28:                display();
    %%%%%:   28-block  0
    #####:   29:                break;
    #####:   30:            case 1:
        -:   31:                // shopping basket case
    #####:   32:                showShoppingBasket();
    %%%%%:   32-block  0
    #####:   33:                break;
    #####:   34:            case 2:
        -:   35:                // switch case
    #####:   36:                return 1;
    %%%%%:   36-block  0
    #####:   37:            case 3:
        -:   38:                // exit case
    #####:   39:                running = false;
    #####:   40:                break;
    %%%%%:   40-block  0
    #####:   41:            default:
    #####:   42:                std::cout << "Invalid command.\n";
    %%%%%:   42-block  0
    #####:   43:                break;
        -:   44:        }
        -:   45:    }
    #####:   46:    return 0;
    %%%%%:   46-block  0
        -:   47:}
        -:   48:
    #####:   49:int UserConsoleUI::mapCommand(const std::string &command) const {
    #####:   50:    std::string commands[] = {"display", "shopping basket", "switch", "exit", "add", "!add", "stop"};
    %%%%%:   50-block  0
    %%%%%:   50-block  1
    %%%%%:   50-block  2
    %%%%%:   50-block  3
    %%%%%:   50-block  4
    %%%%%:   50-block  5
    %%%%%:   50-block  6
    %%%%%:   50-block  7
    %%%%%:   50-block  8
    %%%%%:   50-block  9
    %%%%%:   50-block 10
    $$$$$:   50-block 11
    $$$$$:   50-block 12
    $$$$$:   50-block 13
    $$$$$:   50-block 14
    $$$$$:   50-block 15
    $$$$$:   50-block 16
    $$$$$:   50-block 17
    $$$$$:   50-block 18
    $$$$$:   50-block 19
    $$$$$:   50-block 20
    $$$$$:   50-block 21
    $$$$$:   50-block 22
    $$$$$:   50-block 23
    $$$$$:   50-block 24
    $$$$$:   50-block 25
    $$$$$:   50-block 26
    #####:   51:    int int_commands[] = {0, 1, 2, 3, 4, 5, 6};
        -:   52:
    #####:   53:    for (size_t i = 0; i < 7; ++i)
    %%%%%:   53-block  0
    %%%%%:   53-block  1
    #####:   54:        if (command == commands[i]) return int_commands[i];
    %%%%%:   54-block  0
    %%%%%:   54-block  1
    #####:   55:    return -1;
    %%%%%:   55-block  0
        -:   56:}
        -:   57:
    #####:   58:void UserConsoleUI::trenchCoatMenu() const {
    #####:   59:    TextTable table {2};
    %%%%%:   59-block  0
    %%%%%:   59-block  1
    $$$$$:   59-block  2
    #####:   60:    table.addHeader(2, "COMMAND", "COMMAND DESCRIPTION");
    #####:   61:    table.addRow(2, "add", "choose to add the trench to the shopping basket");
    %%%%%:   61-block  0
    #####:   62:    table.addRow(2, "!add", "choose not to add the trench coat to the basket and to continue to the next");
    %%%%%:   62-block  0
    #####:   63:    table.addRow(2, "stop", "stop displaying trench coats");
    %%%%%:   63-block  0
    #####:   64:    std::cout << "Trench Coat options:\n" << table << '\n';
    %%%%%:   64-block  0
    %%%%%:   64-block  1
    %%%%%:   64-block  2
    #####:   65:}
        -:   66:
    #####:   67:void UserConsoleUI::display() {
    #####:   68:    std::string size = getUserData("Please input the size of the trench coats:");
    %%%%%:   68-block  0
    %%%%%:   68-block  1
    $$$$$:   68-block  2
    $$$$$:   68-block  3
    $$$$$:   68-block  4
        -:   69:
    #####:   70:    int length = service.getCoatsPerSizeLength(size), i = 0;
    #####:   71:    bool main_running = true;
    #####:   72:    if (!length) {
    %%%%%:   72-block  0
    #####:   73:        std::cout << "No trench coats were found.\n\n";
    %%%%%:   73-block  0
    #####:   74:        return;
    %%%%%:   74-block  0
        -:   75:    }
        -:   76:
    #####:   77:    while (main_running) {
    %%%%%:   77-block  0
    %%%%%:   77-block  1
    #####:   78:        service.launchBrowserSizeCoatPhoto(i, size);
    %%%%%:   78-block  0
    #####:   79:        std::cout << "Trench Coat:\n" << service.getSingleCoatPerSizeTextTable(i, size) << '\n';
    %%%%%:   79-block  0
    %%%%%:   79-block  1
    %%%%%:   79-block  2
    %%%%%:   79-block  3
    %%%%%:   79-block  4
    $$$$$:   79-block  5
    $$$$$:   79-block  6
    #####:   80:        trenchCoatMenu();
        -:   81:
    #####:   82:        bool child_running = true;
    %%%%%:   82-block  0
    #####:   83:        while (child_running) {
    %%%%%:   83-block  0
    %%%%%:   83-block  1
    #####:   84:            int command = mapCommand(getCommand());
    %%%%%:   84-block  0
    %%%%%:   84-block  1
    %%%%%:   84-block  2
    $$$$$:   84-block  3
    $$$$$:   84-block  4
    #####:   85:            switch (command) {
    #####:   86:                case 4:
    #####:   87:                    child_running = false;
    #####:   88:                    add(i, size);
    %%%%%:   88-block  0
    #####:   89:                    break;
    %%%%%:   89-block  0
    #####:   90:                case 5:
    #####:   91:                    child_running = false;
    #####:   92:                    std::cout << "Trench coat was not added. You can continue searching for the one that best suits you.\n\n";
    %%%%%:   92-block  0
    #####:   93:                    break;
    %%%%%:   93-block  0
    #####:   94:                case 6:
    #####:   95:                    main_running = child_running = false;
    #####:   96:                    break;
    %%%%%:   96-block  0
    #####:   97:                default:
    #####:   98:                    std::cout << "Invalid command.\n";
    %%%%%:   98-block  0
    #####:   99:                    break;
    %%%%%:   99-block  0
        -:  100:            }
        -:  101:        }
    #####:  102:        length = service.getCoatsPerSizeLength(size);
    %%%%%:  102-block  0
    #####:  103:        if (!length) {
    %%%%%:  103-block  0
    #####:  104:            std::cout << "No trench coats were found.\n\n";
    %%%%%:  104-block  0
    #####:  105:            return;
    %%%%%:  105-block  0
        -:  106:        }
    #####:  107:        (i >= length - 1) ? i = 0 : i++;
    %%%%%:  107-block  0
    %%%%%:  107-block  1
    %%%%%:  107-block  2
        -:  108:    }
        -:  109:}
        -:  110:
    #####:  111:void UserConsoleUI::add(const int& index, const std::string& size) {
    #####:  112:    service.addToShoppingBasket(index, size);
    %%%%%:  112-block  0
    #####:  113:    std::cout << "Trench coat added successfully to the cart.\nCurrent total payment: $" << service.getPayment() << "\n\n";
    #####:  114:}
        -:  115:
    #####:  116:void UserConsoleUI::showShoppingBasket() const {
    #####:  117:    auto table = service.getShoppingBasket();
    %%%%%:  117-block  0
    %%%%%:  117-block  1
    $$$$$:  117-block  2
    #####:  118:    if (table.getRowsNo() == 1) std::cout << "Your shopping basket is empty.\n\n";
    %%%%%:  118-block  0
    %%%%%:  118-block  1
    #####:  119:    else std::cout << "Your shopping basket is:\n" << table << "Total payment: $" << service.getPayment() << "\n\n";
    %%%%%:  119-block  0
    %%%%%:  119-block  1
    %%%%%:  119-block  2
    %%%%%:  119-block  3
    %%%%%:  119-block  4
    #####:  120:}
