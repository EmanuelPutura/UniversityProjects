        -:    0:Source:D:/Informatica/UBB Sem. 2/OOP/AppTemplates/testing/TestAll.cpp
        -:    0:Graph:D:\Informatica\UBB Sem. 2\OOP\AppTemplates\cmake-build-debug-coverage\CMakeFiles\AppTemplates.dir\testing\TestAll.cpp.gcno
        -:    0:Data:D:\Informatica\UBB Sem. 2\OOP\AppTemplates\cmake-build-debug-coverage\CMakeFiles\AppTemplates.dir\testing\TestAll.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by Emanuel on 04.04.2021.
        -:    3://
        -:    4:
        -:    5:#include "TestAll.h"
        -:    6:#include "../infrastructure/Repository/Repository.h"
        -:    7:
        -:    8:#include <string>
        -:    9:#include <assert.h>
        -:   10:
        1:   11:void TestAll::testRepository() {
        1:   12:    Repository<int> repo_ints;
        1:   12-block  0
    $$$$$:   12-block  1
        1:   13:    repo_ints.add(5);
        1:   13-block  0
    $$$$$:   13-block  1
       1*:   14:    assert(repo_ints.getLength() == 1);
        1:   14-block  0
        1:   14-block  1
    %%%%%:   14-block  2
        1:   14-block  3
    %%%%%:   14-block  4
        -:   15:    try {
       1*:   16:        repo_ints.update(2, 3);
        1:   16-block  0
        1:   16-block  1
        1:   16-block  2
    #####:   17:        assert(false);
    %%%%%:   17-block  0
        -:   18:    }
        2:   19:    catch (std::exception) {
        1:   19-block  0
    $$$$$:   19-block  1
    $$$$$:   19-block  2
        -:   20:        assert(true);
        1:   21:        assert(repo_ints.getLength() == 1);
        1:   21-block  0
    $$$$$:   21-block  1
        1:   21-block  2
    $$$$$:   21-block  3
        1:   22:        assert(repo_ints[0] == 5);
        1:   22-block  0
        1:   22-block  1
    $$$$$:   22-block  2
        1:   22-block  3
    $$$$$:   22-block  4
        1:   22-block  5
    $$$$$:   22-block  6
        -:   23:    }
        -:   24:
        1:   25:    repo_ints.add(2);
        1:   25-block  0
    $$$$$:   25-block  1
        1:   26:    repo_ints.add(6);
        1:   26-block  0
    $$$$$:   26-block  1
        1:   27:    repo_ints.add(1);
        1:   27-block  0
    $$$$$:   27-block  1
        -:   28:
        -:   29:    try {
        1:   30:        repo_ints.update(6, 10);
        1:   30-block  0
    $$$$$:   30-block  1
    $$$$$:   30-block  2
       1*:   31:        assert(repo_ints.getLength() == 4);
        1:   31-block  0
        1:   31-block  1
    %%%%%:   31-block  2
        1:   31-block  3
    %%%%%:   31-block  4
       1*:   32:        assert(repo_ints[2] == 10);
        1:   32-block  0
        1:   32-block  1
    %%%%%:   32-block  2
        1:   32-block  3
    %%%%%:   32-block  4
    $$$$$:   32-block  5
       1*:   33:        assert(repo_ints[3] == 1);
        1:   33-block  0
        1:   33-block  1
    %%%%%:   33-block  2
        1:   33-block  3
    %%%%%:   33-block  4
        1:   33-block  5
    $$$$$:   33-block  6
        -:   34:    }
    =====:   35:    catch (std::exception) {
    $$$$$:   35-block  0
    $$$$$:   35-block  1
    $$$$$:   35-block  2
    $$$$$:   35-block  3
    =====:   36:        assert(false);
        -:   37:    }
        -:   38:
        -:   39:    try {
       1*:   40:        assert(repo_ints[4] == 2);
        1:   40-block  0
    %%%%%:   40-block  1
    %%%%%:   40-block  2
    %%%%%:   40-block  3
    %%%%%:   40-block  4
        1:   40-block  5
    #####:   41:        assert(false);
    %%%%%:   41-block  0
        -:   42:    }
        1:   43:    catch(...) {
        1:   43-block  0
        -:   44:        assert(true);
        -:   45:    }
        -:   46:
        1:   47:    repo_ints.remove(10);
        1:   47-block  0
    $$$$$:   47-block  1
       1*:   48:    assert(repo_ints.getLength() == 3);
        1:   48-block  0
        1:   48-block  1
    %%%%%:   48-block  2
        1:   48-block  3
    %%%%%:   48-block  4
       1*:   49:    assert(repo_ints[2] == 1);
        1:   49-block  0
        1:   49-block  1
    %%%%%:   49-block  2
        1:   49-block  3
    %%%%%:   49-block  4
    $$$$$:   49-block  5
        -:   50:
       1*:   51:    assert(repo_ints.search(10) == -1);
        1:   51-block  0
        1:   51-block  1
    %%%%%:   51-block  2
        1:   51-block  3
    %%%%%:   51-block  4
    $$$$$:   51-block  5
       1*:   52:    assert(repo_ints.search(1) == 2);
        1:   52-block  0
        1:   52-block  1
    %%%%%:   52-block  2
        1:   52-block  3
    %%%%%:   52-block  4
    $$$$$:   52-block  5
       1*:   53:    assert(repo_ints.search(2) == 1);
        1:   53-block  0
        1:   53-block  1
    %%%%%:   53-block  2
        1:   53-block  3
    %%%%%:   53-block  4
        1:   53-block  5
    $$$$$:   53-block  6
        1:   54:}
        -:   55:
        1:   56:void TestAll::testAll() {
        1:   57:    testRepository();
        1:   57-block  0
        1:   58:}
        -:   59:
