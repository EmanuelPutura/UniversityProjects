     1                                  %ifdef COMMENT
     2                                      1. Given the words A and B, compute the doubleword C as follows:
     3                                      the bits 0-4 of C are the same as the bits 11-15 of A
     4                                      the bits 5-11 of C have the value 1
     5                                      the bits 12-15 of C are the same as the bits 8-11 of B
     6                                      the bits 16-31 of C are the same as the bits of A
     7                                      
     8                                      ex: A dw 1101 1100 0011 1010b
     9                                          B dw 1001 0001 1111 1110b
    10                                      =>  C =  1101 1100 0011 1010 0001 1111 1111 1011b
    11                                  %endif
    12                                  
    13                                  bits 32 ; assembling for the 32 bits architecture
    14                                  
    15                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
    16                                  global start        
    17                                  
    18                                  ; declare external functions needed by our program
    19                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    20                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    21                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    22                                  
    23                                  ; our data is declared here (the variables needed by our program)
    24                                  segment data use32 class=data
    25 00000000 3ADC                            A dw 1101110000111010b
    26 00000002 FE91                            B dw 1001000111111110b
    27 00000004 <res 00000004>                  C resd 1
    28                                  ; our code starts here
    29                                  segment code use32 class=code
    30                                      start:
    31 00000000 BB00000000                      mov EBX, 0
    32 00000005 66A1[00000000]                  mov AX, [A]
    33 0000000B B10B                            mov CL, 11
    34 0000000D 66D3E8                          shr AX, CL
    35 00000010 6683E01F                        and AX, 0000000000011111b
    36 00000014 6689C3                          mov BX, AX
    37                                          
    38 00000017 6681CBE00F                      or BX, 0000111111100000b
    39                                          
    40 0000001C 66A1[02000000]                  mov AX, [B]
    41 00000022 B104                            mov CL, 4
    42 00000024 66D3E0                          shl AX, CL
    43 00000027 662500F0                        and AX, 1111000000000000b
    44 0000002B 6609C3                          or BX, AX
    45                                          
    46 0000002E 668B15[00000000]                mov DX, [A]
    47 00000035 6652                            push DX
    48 00000037 6653                            push BX
    49 00000039 5B                              pop EBX
    50                                          
    51 0000003A 891D[04000000]                  mov [C], EBX
    52                                          
    53 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
