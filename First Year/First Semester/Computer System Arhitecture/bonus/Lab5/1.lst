     1                                  %ifdef COMMENT
     2                                      1. Given a byte string S of length L, obtain the string D of length L-1 as D(i) = S(i) * S(i+1) (each element of D is the product of two consecutive elements of S).
     3                                  %endif
     4                                  
     5                                  
     6                                  bits 32 ; assembling for the 32 bits architecture
     7                                  
     8                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     9                                  global start        
    10                                  
    11                                  ; declare external functions needed by our program
    12                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    13                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18 00000000 01020304                        S db 1, 2, 3, 4
    19                                          L equ $ - S
    20 00000004 <res 00000006>                  D resw L - 1
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 B8[00000000]                    mov EAX, S
    25 00000005 B903000000                      mov ECX, L - 1
    26 0000000A E321                            jecxz final
    27                                          
    28 0000000C BE00000000                      mov ESI, 0
    29 00000011 BF00000000                      mov EDI, 0
    30                                          
    31                                          S_loop:
    32 00000016 8A86[00000000]                      mov AL, [S + ESI]
    33 0000001C F6A6[01000000]                      mul byte [S + ESI + 1]
    34 00000022 668987[04000000]                    mov [D + EDI], AX
    35                                              
    36 00000029 46                                  inc ESI
    37 0000002A 47                                  inc EDI
    38 0000002B E2E9                            loop S_loop
    39                                          
    40                                          final:
    41 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
